# Environment Configuration
# ========================
# 
# Environment-specific configuration for Movie Recommendation System
# Copy to .env and customize for your environment

# Application Configuration
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=info

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1

# API Configuration
API_TITLE="Movie Recommendation System"
API_VERSION=1.0.0
API_DESCRIPTION="Hybrid movie recommendation system using fuzzy logic and neural networks"

# Performance Configuration
CACHE_SIZE=1000
CACHE_TTL=3600
BATCH_SIZE=32

# Security Configuration
SECRET_KEY=your-secret-key-here-change-in-production
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# Database Configuration (if using external database)
DATABASE_URL=sqlite:///./data/recommendations.db
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis Configuration (if using Redis cache)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0

# Monitoring Configuration
ENABLE_METRICS=true
METRICS_PATH=/metrics
PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# Model Configuration
MODEL_PATH=./models/simple_ann_model.keras
FUZZY_RULES_COUNT=47
PREDICTION_CONFIDENCE_THRESHOLD=0.5

# Feature Flags
ENABLE_CACHING=true
ENABLE_BATCH_PROCESSING=true
ENABLE_RATE_LIMITING=true
ENABLE_CORS=true

# External Services (if applicable)
TMDB_API_KEY=your-tmdb-api-key
OMDB_API_KEY=your-omdb-api-key

# Docker Configuration
DOCKER_REGISTRY=ghcr.io
IMAGE_NAME=movie-recommender
IMAGE_TAG=latest